{"version":3,"sources":["components/blogs/detail.js","pages/blog-details.js"],"names":["BlogDetail","useState","data","setData","cate","setCate","slug","useParams","loading","setLoading","useEffect","blogDetail","a","getBlogListApi","blogData","getBlogCattApi","CateData","filteredblogData","filter","filteredcateData","item","id","categories","name","console","log","className","class","src","_embedded","alt","href","content","title","rendered","dayjs","date","format","BlogDetails","setTitle","description","setDescription","metaDetail","getBlogMetaApi","GetmetaDetails","json","og_title","bgImage"],"mappings":"yPAoGeA,G,OA7FI,WAAO,IAAD,MACCC,qBADD,mBAChBC,EADgB,KACVC,EADU,OAECF,qBAFD,mBAEhBG,EAFgB,KAEVC,EAFU,KAGfC,EAASC,cAATD,KAHe,EAIOL,oBAAS,GAJhB,mBAIhBO,EAJgB,KAIPC,EAJO,KAMvBC,qBAAU,WACRC,MACC,IAEH,IAAMA,EAAU,uCAAG,sCAAAC,EAAA,sEAEfH,GAAW,GAFI,SAIQI,cAJR,cAITC,EAJS,gBAKQC,cALR,OAKTC,EALS,OAMTC,EANS,OAMUH,QANV,IAMUA,GANV,UAMUA,EAAUZ,YANpB,aAMU,EAAgBgB,QACvC,SAAChB,GAAD,OAAUA,EAAKI,MAAQA,KAEzBH,EAAQc,EAAiB,IACnBE,EAVS,OAUUH,QAVV,IAUUA,GAVV,UAUUA,EAAUd,YAVpB,aAUU,EAAgBgB,QACvC,SAACE,GAAD,OAAUA,EAAKC,IAAMJ,EAAiB,GAAGK,cAG3CjB,EAAQc,EAAiB,GAAGI,MAE5Bd,GAAW,GAhBI,kDAoBfe,QAAQC,IACN,+DADF,MAIAhB,GAAW,GAxBI,0DAAH,qDA2BhB,OACE,mCACGD,EACC,qBAAKkB,UAAU,cAAf,SACE,qBAAKC,MAAM,OAAX,SACE,sBAAKA,MAAM,aAAX,UACE,wBACA,+BAKN,sBAAKD,UAAU,cAAf,UACE,yBAASC,MAAM,SAAf,SACE,qBACEC,IAAG,OAAE1B,QAAF,IAAEA,OAAF,EAAEA,EAAM2B,UAAU,oBAAoB,GAApC,WACLF,MAAM,YACNG,IAAI,WAGR,yBAASH,MAAM,oBAAf,SACE,sBAAKA,MAAM,YAAX,UACE,qBAAKA,MAAM,MAAX,SACE,sBAAKA,MAAM,yBAAX,UACE,6BACE,mBAAGI,KAAK,GAAR,SAAY3B,MAEd,6BACE,cAAC,IAAD,CAAY4B,QAAO,OAAE9B,QAAF,IAAEA,GAAF,UAAEA,EAAM+B,aAAR,aAAE,EAAaC,aAEpC,oBAAIP,MAAM,SAAV,SACGQ,IAAK,OAACjC,QAAD,IAACA,OAAD,EAACA,EAAMkC,MAAMC,OAAO,sBAIhC,qBAAKV,MAAM,MAAX,SACE,qBAAKA,MAAM,kBAEb,qBAAKA,MAAM,MAAX,SACE,qBAAKA,MAAM,8EAAX,SACE,qBAAKA,MAAM,iBAAX,SACE,cAAC,IAAD,CAAYK,QAAO,OAAE9B,QAAF,IAAEA,GAAF,UAAEA,EAAM8B,eAAR,aAAE,EAAeE,iBAI1C,qBAAKP,MAAM,MAAX,SACE,qBAAKA,MAAM,8BCjDZW,UAlCK,WAAO,IACjBhC,EAASC,cAATD,KADgB,EAEEL,qBAFF,mBAEjBgC,EAFiB,KAEVM,EAFU,OAGctC,qBAHd,mBAGjBuC,EAHiB,KAGJC,EAHI,KAIxB/B,qBAAU,WACRgC,MACC,IACH,IAAMA,EAAU,uCAAG,oCAAA9B,EAAA,+EAGc+B,YAAe,CAAErC,KAAMA,IAHrC,OAGTsC,EAHS,OAIfL,EAAQ,OAACK,QAAD,IAACA,GAAD,UAACA,EAAgB1C,YAAjB,iBAAC,EAAsB2C,YAAvB,aAAC,EAA4BC,UACrCL,EAAc,OAACG,QAAD,IAACA,GAAD,UAACA,EAAgB1C,YAAjB,iBAAC,EAAsB2C,YAAvB,aAAC,EAA4BL,aAL5B,gDAYfhB,QAAQC,IACN,+DADF,MAZe,yDAAH,qDAkBhB,OACE,qCACE,cAAC,IAAD,CAAQsB,SAAO,EAACd,MAAOA,EAAQO,YAAaA,IAC5C,cAAC,EAAD,IACA,cAAC,IAAD","file":"static/js/21.8447b6a1.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { getBlogListApi, getBlogCattApi } from \"../../api/methods\";\nimport { Interweave } from \"interweave\";\nimport dayjs from \"dayjs\";\nimport \"./style.scss\";\n\nconst BlogDetail = () => {\n  const [data, setData] = useState();\n  const [cate, setCate] = useState();\n  const { slug } = useParams();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    blogDetail();\n  }, []);\n\n  const blogDetail = async () => {\n    try {\n      setLoading(true);\n\n      const blogData = await getBlogListApi();\n      const CateData = await getBlogCattApi();\n      const filteredblogData = blogData?.data?.filter(\n        (data) => data.slug == slug\n      );\n      setData(filteredblogData[0]);\n      const filteredcateData = CateData?.data?.filter(\n        (item) => item.id == filteredblogData[0].categories\n      );\n      //console.log(filteredcateData[0]);\n      setCate(filteredcateData[0].name);\n      //console.log(filteredblogData);\n      setLoading(false);\n    } catch (error) {\n      // setReLoading(false);\n      //toast.error(\"An unexpected error occured. Please try again  later\");\n      console.log(\n        \":rocket: ~ file: index.js ~ line 92 ~ responseGoogle ~ error\",\n        error\n      );\n      setLoading(false);\n    }\n  };\n  return (\n    <>\n      {loading ? (\n        <div className=\"blog-loader\">\n          <div class=\"span\">\n            <div class=\"lds-ripple\">\n              <div></div>\n              <div></div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"single-post\">\n          <section class=\"banner\">\n            <img\n              src={data?._embedded[\"wp:featuredmedia\"][\"0\"][\"source_url\"]}\n              class=\"img-fluid\"\n              alt=\"blog\"\n            />\n          </section>\n          <section class=\"blog-content p-80\">\n            <div class=\"container\">\n              <div class=\"row\">\n                <div class=\"title-head text-center\">\n                  <h3>\n                    <a href=\"\">{cate}</a>\n                  </h3>\n                  <h2>\n                    <Interweave content={data?.title?.rendered} />\n                  </h2>\n                  <h5 class=\"b_date\">\n                    {dayjs(data?.date).format(\"MMM D, YYYY\")}\n                  </h5>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"border-line\"></div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-10 col-lg-10 col-sm-10 col-xs-12 offset-md-1 offset-lg-1 offset-sm-1\">\n                  <div class=\"right-blog-cnt\">\n                    <Interweave content={data?.content?.rendered} />\n                  </div>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"border-line\"></div>\n              </div>\n            </div>\n          </section>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default BlogDetail;\n","import React, { useEffect, useState } from \"react\";\nimport Header from \"../components/header\";\nimport Footer from \"../components/footer\";\nimport BlogDetail from \"../components/blogs/detail\";\nimport {getBlogMetaApi} from \"../api/methods\";\nimport { useParams } from \"react-router\";\n\nconst BlogDetails = () => {\n  const { slug } = useParams();\n  const [title, setTitle] = useState();\n  const [description, setDescription] = useState();\n  useEffect(() => {\n    metaDetail();\n  }, []);\n  const metaDetail = async () => {\n    try {\n      \n      const GetmetaDetails = await getBlogMetaApi({ slug: slug });\n      setTitle(GetmetaDetails?.data?.json?.og_title);\n      setDescription(GetmetaDetails?.data?.json?.description);\n      \n\n      //console.log(LastAnnouncementData.slice(3));\n    } catch (error) {\n      // setReLoading(false);\n      //toast.error(\"An unexpected error occured. Please try again  later\");\n      console.log(\n        \":rocket: ~ file: index.js ~ line 92 ~ responseGoogle ~ error\",\n        error\n      );\n    }\n  };\n  return (\n    <>\n      <Header bgImage title={title}  description={description} />\n      <BlogDetail />\n      <Footer />\n    </>\n  );\n};\n\nexport default BlogDetails;\n"],"sourceRoot":""}