{"version":3,"sources":["../../src/shared/uid.ts","../../src/web/Svg.tsx","../../src/web/ContentLoader.tsx","../../src/web/presets/FacebookStyle.tsx","components/recently-sold-list/index.js","pages/recently-sold.js"],"names":["SVG","animate","backgroundColor","backgroundOpacity","baseUrl","children","foregroundColor","foregroundOpacity","gradientRatio","uniqueKey","interval","rtl","speed","style","title","fixedId","Math","random","toString","substring","idClip","idGradient","idAria","rtlStyle","transform","keyTimes","dur","React.createElement","role","props","id","x","y","width","height","clipPath","fill","offset","stopColor","stopOpacity","attributeName","values","repeatCount","defaultProps","ContentLoader","Svg","Facebook","ReactContentLoaderFacebook","viewBox","rx","cx","cy","r","NFTCardLoader","className","ry","RecentlySoldList","history","useHistory","useState","page","setPage","list","setList","loading","setLoading","hasNext","setHasNext","loadingMore","setLoadingMore","query","useQuery","slug","useParams","sort","name","value","checked","filter","setFilter","useEffect","sort_filters","get","info","map","obj","showAllFilteredNFTs","showAllNFTs","a","nftRecentlySoldApi","response","data","nfts","next_page","console","log","ShowAllSort","React","forwardRef","ref","onClick","e","preventDefault","find","Dropdown","Toggle","align","drop","as","Menu","i","Item","input","sort_exist","query_string","push","handleSortNFT","color","size","length","nft","image","sample","recentSold","disabled","RecentlySold","bgImage"],"mappings":"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","file":"static/js/23.3cc4eede.chunk.js","sourcesContent":["export default (): string =>\n  Math.random()\n    .toString(36)\n    .substring(6)\n","import * as React from 'react'\n\nimport uid from '../shared/uid'\nimport { IContentLoaderProps } from './'\n\nconst SVG: React.FC<IContentLoaderProps> = ({\n  animate,\n  backgroundColor,\n  backgroundOpacity,\n  baseUrl,\n  children,\n  foregroundColor,\n  foregroundOpacity,\n  gradientRatio,\n  uniqueKey,\n  interval,\n  rtl,\n  speed,\n  style,\n  title,\n  ...props\n}) => {\n  const fixedId = uniqueKey || uid()\n  const idClip = `${fixedId}-diff`\n  const idGradient = `${fixedId}-animated-diff`\n  const idAria = `${fixedId}-aria`\n\n  const rtlStyle = rtl ? { transform: 'scaleX(-1)' } : null\n  const keyTimes = `0; ${interval}; 1`\n  const dur = `${speed}s`\n\n  return (\n    <svg\n      aria-labelledby={idAria}\n      role=\"img\"\n      style={{ ...style, ...rtlStyle }}\n      {...props}\n    >\n      {title ? <title id={idAria}>{title}</title> : null}\n      <rect\n        role=\"presentation\"\n        x=\"0\"\n        y=\"0\"\n        width=\"100%\"\n        height=\"100%\"\n        clipPath={`url(${baseUrl}#${idClip})`}\n        style={{ fill: `url(${baseUrl}#${idGradient})` }}\n      />\n\n      <defs>\n        <clipPath id={idClip}>{children}</clipPath>\n\n        <linearGradient id={idGradient}>\n          <stop\n            offset=\"0%\"\n            stopColor={backgroundColor}\n            stopOpacity={backgroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`${-gradientRatio}; ${-gradientRatio}; 1`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n              />\n            )}\n          </stop>\n\n          <stop\n            offset=\"50%\"\n            stopColor={foregroundColor}\n            stopOpacity={foregroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`${-gradientRatio / 2}; ${-gradientRatio / 2}; ${1 +\n                  gradientRatio / 2}`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n              />\n            )}\n          </stop>\n\n          <stop\n            offset=\"100%\"\n            stopColor={backgroundColor}\n            stopOpacity={backgroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`0; 0; ${1 + gradientRatio}`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n              />\n            )}\n          </stop>\n        </linearGradient>\n      </defs>\n    </svg>\n  )\n}\n\nSVG.defaultProps = {\n  animate: true,\n  backgroundColor: '#f5f6f7',\n  backgroundOpacity: 1,\n  baseUrl: '',\n  foregroundColor: '#eee',\n  foregroundOpacity: 1,\n  gradientRatio: 2,\n  id: null,\n  interval: 0.25,\n  rtl: false,\n  speed: 1.2,\n  style: {},\n  title: 'Loading...',\n}\n\nexport default SVG\n","import * as React from 'react'\n\nimport { Facebook, IContentLoaderProps } from '.'\nimport Svg from './Svg'\n\nconst ContentLoader: React.FC<IContentLoaderProps> = props =>\n  props.children ? <Svg {...props} /> : <Facebook {...props} />\n\nexport default ContentLoader\n","import * as React from 'react'\n\nimport { IContentLoaderProps } from '..'\nimport ContentLoader from '../ContentLoader'\n\nconst ReactContentLoaderFacebook: React.FC<IContentLoaderProps> = props => (\n  <ContentLoader viewBox=\"0 0 476 124\" {...props}>\n    <rect x=\"48\" y=\"8\" width=\"88\" height=\"6\" rx=\"3\" />\n    <rect x=\"48\" y=\"26\" width=\"52\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"56\" width=\"410\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"72\" width=\"380\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"88\" width=\"178\" height=\"6\" rx=\"3\" />\n    <circle cx=\"20\" cy=\"20\" r=\"20\" />\n  </ContentLoader>\n)\n\nexport default ReactContentLoaderFacebook\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useEffect, useState } from \"react\";\nimport ContentLoader from \"react-content-loader\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { Dropdown } from \"react-bootstrap\";\nimport { FaCheckCircle } from \"react-icons/fa\";\nimport { nftRecentlySoldApi } from \"../../api/methods\";\n\nimport NFTCard from \"../nft-card\";\nimport sample from \"../../images/sampleNFT.jpg\";\nimport \"./style.scss\";\nimport useQuery from \"../../hook/useQuery\";\nimport { BiCaretDown } from \"react-icons/bi\";\n\nconst RecentlySoldList = () => {\n  const history = useHistory();\n  const [page, setPage] = useState(1);\n  const [list, setList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [hasNext, setHasNext] = useState(false);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const query = useQuery();\n  const { slug } = useParams();\n\n  const [filter, setFilter] = useState({\n    sort: [\n      {\n        name: \"Recently Sold\",\n        value: \"recently_sold\",\n        checked: true,\n      },\n      {\n        name: \"Price - High to Low\",\n        value: \"price_desc\",\n        checked: false,\n      },\n      {\n        name: \"Price - Low to High\",\n        value: \"price_asc\",\n        checked: false,\n      },\n    ],\n  });\n\n  useEffect(() => {\n    const sort_filters = query.get(\"sort\")\n      ? query.get(\"sort\")\n      : \"recently_sold\";\n\n    const info = { ...filter };\n\n    info.sort = filter.sort.map((obj) => ({\n      ...obj,\n      checked: sort_filters ? sort_filters === obj.value : false,\n    }));\n    showAllFilteredNFTs(1, sort_filters);\n    setPage(1);\n    setFilter(info);\n  }, [slug, query]);\n\n  const showAllNFTs = async (page, sort = \"recently_sold\") => {\n    try {\n      page === 1 && setLoading(true);\n      setLoadingMore(true);\n      let response = await nftRecentlySoldApi(page, sort);\n      setList([...list, ...response.data.data.nfts]);\n      setHasNext(response.data.data.next_page);\n      page === 1 && setLoading(false);\n      setLoadingMore(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const showAllFilteredNFTs = async (page, sort = \"recently_sold\") => {\n    try {\n      page === 1 && setLoading(true);\n      setLoadingMore(true);\n      let response = await nftRecentlySoldApi(page, sort);\n      setList(response.data.data.nfts);\n      setHasNext(response.data.data.next_page);\n      page === 1 && setLoading(false);\n      setLoadingMore(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const fetchMore = () => {\n    if (hasNext) {\n      const sort_filters = query.get(\"sort\")\n        ? query.get(\"sort\")\n        : \"recently_sold\";\n\n      showAllNFTs(page + 1, sort_filters);\n      setPage(page + 1);\n    }\n  };\n\n  const ShowAllSort = React.forwardRef(({ onClick }, ref) => (\n    <div\n      className=\"filter-drop-sort-btn\"\n      ref={ref}\n      onClick={(e) => {\n        e.preventDefault();\n        onClick(e);\n      }}\n    >\n      {filter.sort.find((obj) => obj.checked === true)?.name\n        ? `Sort By: ${filter.sort.find((obj) => obj.checked === true).name}`\n        : \"Sort By\"}\n      <BiCaretDown className=\"mb-1\" />\n    </div>\n  ));\n\n  const handleSortNFT = (input) => {\n    const sort_exist = input.value;\n\n    let query_string = \"\";\n\n    if (sort_exist) {\n      query_string += query_string\n        ? `&sort=${sort_exist}`\n        : `sort=${sort_exist}`;\n    }\n\n    history.push(`/nfts/sale-history?${query_string}`);\n  };\n\n  return (\n    <>\n      <section className=\"explore-nft-section\">\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-sm-12\">\n              <div className=\"sec-heading d-flex align-items-center mb-5 explore-heading\">\n                <span className=\"me-4 text-nowrap\">RECENTLY SOLD</span>\n                <span className=\"d-flex justify-content-end mt-2 w-100 filter-blocks\">\n                  <div className=\"filt-flex-box\">\n                    <Dropdown>\n                      <Dropdown.Toggle\n                        align=\"start\"\n                        drop=\"start\"\n                        as={ShowAllSort}\n                      ></Dropdown.Toggle>\n\n                      <Dropdown.Menu align=\"start\">\n                        {filter.sort.map((obj, i) => (\n                          <Dropdown.Item\n                            key={`nft${i}`}\n                            as=\"button\"\n                            onClick={() => handleSortNFT(obj)}\n                          >\n                            <FaCheckCircle\n                              color={obj.checked ? \"green\" : \"#ccc\"}\n                              className=\"mb-1 me-2\"\n                              size={17}\n                            />{\" \"}\n                            {obj.name}\n                          </Dropdown.Item>\n                        ))}\n                      </Dropdown.Menu>\n                    </Dropdown>\n                  </div>\n                </span>\n              </div>\n\n              {!loading ? (\n                <div className=\"row\">\n                  {list.length > 0 ? (\n                    list.map((nft, i) => (\n                      <div\n                        key={`list-nft-${i}`}\n                        className=\"col-xl-3 col-lg-4 col-md-6 col-sm-6\"\n                      >\n                        <NFTCard nft={nft} key={i} image={sample} recentSold />\n                      </div>\n                    ))\n                  ) : (\n                    <div className=\"col-12 text-center mb-5\">\n                      <h3 className=\"my-3\">No Records Found!</h3>\n                    </div>\n                  )}\n\n                  {!loading && loadingMore && <NFTCardLoader />}\n\n                  {hasNext && (\n                    <div className=\"row mb-5\">\n                      <div className=\"col-md-12 text-center\">\n                        <button\n                          className=\"load_more\"\n                          disabled={loadingMore}\n                          onClick={fetchMore}\n                        >\n                          {loadingMore ? \"Loading...\" : \"Load More\"}\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              ) : (\n                <NFTCardLoader />\n              )}\n            </div>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n};\n\nconst NFTCardLoader = (props) => (\n  <ContentLoader\n    viewBox=\"0 50 900 300\"\n    width={\"100%\"}\n    height={\"100%\"}\n    backgroundColor=\"#f5f5f5\"\n    foregroundColor=\"#dbdbdb\"\n    className=\"mt-1\"\n    {...props}\n  >\n    <rect x=\"0\" y=\"5\" rx=\"2\" ry=\"2\" width=\"218\" height=\"280\" />\n    <rect x=\"228\" y=\"5\" rx=\"2\" ry=\"2\" width=\"218\" height=\"280\" />\n    <rect x=\"456\" y=\"5\" rx=\"2\" ry=\"2\" width=\"218\" height=\"280\" />\n    <rect x=\"684\" y=\"5\" rx=\"2\" ry=\"2\" width=\"218\" height=\"280\" />\n  </ContentLoader>\n);\n\nexport default RecentlySoldList;\n","import React from \"react\";\nimport Header from \"../components/header\";\nimport Footer from \"../components/footer\";\nimport RecentlySoldList from \"../components/recently-sold-list/index\";\n\nconst RecentlySold = () => {\n  return (\n    <>\n      <Header bgImage />\n      <RecentlySoldList />\n      <Footer />\n    </>\n  );\n};\n\nexport default RecentlySold;\n"],"sourceRoot":""}