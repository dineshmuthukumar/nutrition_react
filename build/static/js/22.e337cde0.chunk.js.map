{"version":3,"sources":["../../src/shared/uid.ts","../../src/web/Svg.tsx","../../src/web/ContentLoader.tsx","../../src/web/presets/FacebookStyle.tsx","components/favourite-nfts-list/index.js","pages/my-favorites.js"],"names":["SVG","animate","backgroundColor","backgroundOpacity","baseUrl","children","foregroundColor","foregroundOpacity","gradientRatio","uniqueKey","interval","rtl","speed","style","title","fixedId","Math","random","toString","substring","idClip","idGradient","idAria","rtlStyle","transform","keyTimes","dur","React.createElement","role","props","id","x","y","width","height","clipPath","fill","offset","stopColor","stopOpacity","attributeName","values","repeatCount","defaultProps","ContentLoader","Svg","Facebook","ReactContentLoaderFacebook","viewBox","rx","cx","cy","r","NFTCardLoader","className","ry","FavouriteNftsList","useState","page","setPage","list","setList","loading","setLoading","hasNext","setHasNext","loadingMore","setLoadingMore","useEffect","showAllNFTs","a","userFavedNFTOrders","response","console","log","data","orders","next_page","length","map","nft","i","image","sample","favouriteNFTs","disabled","onClick","MyFavorites"],"mappings":"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","file":"static/js/22.e337cde0.chunk.js","sourcesContent":["export default (): string =>\n  Math.random()\n    .toString(36)\n    .substring(6)\n","import * as React from 'react'\n\nimport uid from '../shared/uid'\nimport { IContentLoaderProps } from './'\n\nconst SVG: React.FC<IContentLoaderProps> = ({\n  animate,\n  backgroundColor,\n  backgroundOpacity,\n  baseUrl,\n  children,\n  foregroundColor,\n  foregroundOpacity,\n  gradientRatio,\n  uniqueKey,\n  interval,\n  rtl,\n  speed,\n  style,\n  title,\n  ...props\n}) => {\n  const fixedId = uniqueKey || uid()\n  const idClip = `${fixedId}-diff`\n  const idGradient = `${fixedId}-animated-diff`\n  const idAria = `${fixedId}-aria`\n\n  const rtlStyle = rtl ? { transform: 'scaleX(-1)' } : null\n  const keyTimes = `0; ${interval}; 1`\n  const dur = `${speed}s`\n\n  return (\n    <svg\n      aria-labelledby={idAria}\n      role=\"img\"\n      style={{ ...style, ...rtlStyle }}\n      {...props}\n    >\n      {title ? <title id={idAria}>{title}</title> : null}\n      <rect\n        role=\"presentation\"\n        x=\"0\"\n        y=\"0\"\n        width=\"100%\"\n        height=\"100%\"\n        clipPath={`url(${baseUrl}#${idClip})`}\n        style={{ fill: `url(${baseUrl}#${idGradient})` }}\n      />\n\n      <defs>\n        <clipPath id={idClip}>{children}</clipPath>\n\n        <linearGradient id={idGradient}>\n          <stop\n            offset=\"0%\"\n            stopColor={backgroundColor}\n            stopOpacity={backgroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`${-gradientRatio}; ${-gradientRatio}; 1`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n              />\n            )}\n          </stop>\n\n          <stop\n            offset=\"50%\"\n            stopColor={foregroundColor}\n            stopOpacity={foregroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`${-gradientRatio / 2}; ${-gradientRatio / 2}; ${1 +\n                  gradientRatio / 2}`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n              />\n            )}\n          </stop>\n\n          <stop\n            offset=\"100%\"\n            stopColor={backgroundColor}\n            stopOpacity={backgroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`0; 0; ${1 + gradientRatio}`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n              />\n            )}\n          </stop>\n        </linearGradient>\n      </defs>\n    </svg>\n  )\n}\n\nSVG.defaultProps = {\n  animate: true,\n  backgroundColor: '#f5f6f7',\n  backgroundOpacity: 1,\n  baseUrl: '',\n  foregroundColor: '#eee',\n  foregroundOpacity: 1,\n  gradientRatio: 2,\n  id: null,\n  interval: 0.25,\n  rtl: false,\n  speed: 1.2,\n  style: {},\n  title: 'Loading...',\n}\n\nexport default SVG\n","import * as React from 'react'\n\nimport { Facebook, IContentLoaderProps } from '.'\nimport Svg from './Svg'\n\nconst ContentLoader: React.FC<IContentLoaderProps> = props =>\n  props.children ? <Svg {...props} /> : <Facebook {...props} />\n\nexport default ContentLoader\n","import * as React from 'react'\n\nimport { IContentLoaderProps } from '..'\nimport ContentLoader from '../ContentLoader'\n\nconst ReactContentLoaderFacebook: React.FC<IContentLoaderProps> = props => (\n  <ContentLoader viewBox=\"0 0 476 124\" {...props}>\n    <rect x=\"48\" y=\"8\" width=\"88\" height=\"6\" rx=\"3\" />\n    <rect x=\"48\" y=\"26\" width=\"52\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"56\" width=\"410\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"72\" width=\"380\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"88\" width=\"178\" height=\"6\" rx=\"3\" />\n    <circle cx=\"20\" cy=\"20\" r=\"20\" />\n  </ContentLoader>\n)\n\nexport default ReactContentLoaderFacebook\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useEffect, useState } from \"react\";\nimport ContentLoader from \"react-content-loader\";\nimport { userFavedNFTOrders } from \"../../api/methods\";\n\nimport NFTCard from \"../nft-card\";\nimport sample from \"../../images/sampleNFT.jpg\";\n\nimport \"./style.scss\";\n\nconst FavouriteNftsList = () => {\n  const [page, setPage] = useState(1);\n  const [list, setList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [hasNext, setHasNext] = useState(false);\n  const [loadingMore, setLoadingMore] = useState(false);\n\n  useEffect(() => {\n    showAllNFTs(1);\n  }, []);\n\n  const showAllNFTs = async (page) => {\n    try {\n      page === 1 && setLoading(true);\n      setLoadingMore(true);\n      let response = await userFavedNFTOrders(page);\n      console.log(response, \"response\");\n      setList([...list, ...response.data.data.orders]);\n      setHasNext(response.data.data.next_page);\n      page === 1 && setLoading(false);\n      setLoadingMore(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const fetchMore = () => {\n    if (hasNext) {\n      setPage(page + 1);\n      showAllNFTs(page + 1);\n      setPage(page + 1);\n    }\n  };\n\n  return (\n    <>\n      <section className=\"explore-nft-section\">\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-sm-12\">\n              <div className=\"sec-heading d-flex align-items-center mb-5 explore-heading\">\n                <div className=\"flex-heading\">\n                  <span className=\"title full-width-title\">\n                    ❤️ My Favorites On Sale\n                  </span>\n                </div>\n              </div>\n\n              {!loading ? (\n                <div className=\"row\">\n                  {list.length > 0 ? (\n                    list.map((nft, i) => (\n                      <div\n                        key={`list-nft-${i}`}\n                        className=\"col-xl-3 col-lg-4 col-md-6 col-sm-6\"\n                      >\n                        <NFTCard\n                          nft={nft}\n                          key={i}\n                          image={sample}\n                          favouriteNFTs\n                        />\n                      </div>\n                    ))\n                  ) : (\n                    <div className=\"col-12 text-center mb-5\">\n                      <h3 className=\"my-3\">No Records Found!</h3>\n                    </div>\n                  )}\n\n                  {!loading && loadingMore && <NFTCardLoader />}\n\n                  {hasNext && (\n                    <div className=\"row mb-5\">\n                      <div className=\"col-md-12 text-center\">\n                        <button\n                          className=\"load_more\"\n                          disabled={loadingMore}\n                          onClick={fetchMore}\n                        >\n                          {loadingMore ? \"Loading...\" : \"Load More\"}\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              ) : (\n                <NFTCardLoader />\n              )}\n            </div>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n};\n\nconst NFTCardLoader = (props) => (\n  <ContentLoader\n    viewBox=\"0 50 900 300\"\n    width={\"100%\"}\n    height={\"100%\"}\n    backgroundColor=\"#f5f5f5\"\n    foregroundColor=\"#dbdbdb\"\n    className=\"mt-1\"\n    {...props}\n  >\n    <rect x=\"0\" y=\"5\" rx=\"2\" ry=\"2\" width=\"218\" height=\"280\" />\n    <rect x=\"228\" y=\"5\" rx=\"2\" ry=\"2\" width=\"218\" height=\"280\" />\n    <rect x=\"456\" y=\"5\" rx=\"2\" ry=\"2\" width=\"218\" height=\"280\" />\n    <rect x=\"684\" y=\"5\" rx=\"2\" ry=\"2\" width=\"218\" height=\"280\" />\n  </ContentLoader>\n);\n\nexport default FavouriteNftsList;\n","import React from \"react\";\nimport Header from \"../components/header\";\nimport Footer from \"../components/footer\";\nimport FavouriteNftsList from \"../components/favourite-nfts-list\";\n\nconst MyFavorites = () => {\n  return (\n    <>\n      <Header />\n      <FavouriteNftsList />\n      <Footer />\n    </>\n  );\n};\n\nexport default MyFavorites;\n"],"sourceRoot":""}